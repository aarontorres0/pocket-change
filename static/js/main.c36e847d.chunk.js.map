{"version":3,"sources":["components/IncomeForm.js","components/IncomeEntry.js","components/IncomeList.js","components/ExpenseForm.js","components/ExpenseEntry.js","components/ExpenseList.js","App.js","reportWebVitals.js","index.js"],"names":["IncomeForm","balance","setBalance","incomeBalance","setIncomeBalance","inputIncomeText","setInputIncomeText","inputDollarText","setDollarInputText","incomeEntries","setIncomeEntries","value","onChange","e","target","type","className","placeholder","onClick","preventDefault","text","amount","parseInt","id","Math","random","IncomeEntry","incomeEntry","filter","el","IncomeList","map","ExpenseForm","expenseBalance","setExpenseBalance","inputExpenseText","setInputExpenseText","inputExpenseDollarText","setExpenseDollarInputText","expenseEntries","setExpenseEntries","ExpenseEntry","expenseEntry","ExpenseList","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c36e847d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst IncomeForm = ({\n  balance,\n  setBalance,\n  incomeBalance,\n  setIncomeBalance,\n  inputIncomeText,\n  setInputIncomeText,\n  inputDollarText,\n  setDollarInputText,\n  incomeEntries,\n  setIncomeEntries,\n}) => {\n  const inputTextHandler = (e) => {\n    setInputIncomeText(e.target.value);\n  };\n  const inputDollarTextHandler = (e) => {\n    setDollarInputText(e.target.value);\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setIncomeEntries([\n      ...incomeEntries,\n      {\n        text: inputIncomeText,\n        amount: parseInt(inputDollarText),\n        id: Math.random() * 100,\n      },\n    ]);\n    // maybe I should do setBalance here instead of balanceHandler. button onclick calls submithandler\n    setBalance(balance + parseInt(inputDollarText));\n    setIncomeBalance(incomeBalance + parseInt(inputDollarText));\n    setInputIncomeText(\"\");\n    setDollarInputText(\"\");\n  };\n\n  return (\n    <form>\n      <input\n        value={inputIncomeText}\n        onChange={inputTextHandler}\n        type=\"text\"\n        className=\"income-input\"\n        placeholder=\"Input income\"\n      ></input>\n      <input\n        value={inputDollarText}\n        onChange={inputDollarTextHandler}\n        type=\"number\"\n        className=\"income-input-value\"\n        placeholder=\"$\"\n      ></input>\n      <button onClick={submitHandler} className=\"income-button\" type=\"submit\">\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n    </form>\n  );\n};\n\nexport default IncomeForm;\n","import React from \"react\";\n\nconst IncomeEntry = ({\n  balance,\n  setBalance,\n  incomeBalance,\n  setIncomeBalance,\n  incomeEntries,\n  setIncomeEntries,\n  incomeEntry,\n  text,\n  amount,\n}) => {\n  //Events\n  /**\n   * filer through each element id and if it matches the entry id then filter it\n   * out to get rid of it\n   */\n  const deleteHandler = () => {\n    setBalance(balance - amount);\n    setIncomeBalance(incomeBalance - amount);\n    setIncomeEntries(incomeEntries.filter((el) => el.id !== incomeEntry.id));\n  };\n  return (\n    <div className=\"income\">\n      <li className=\"income-item\">{text}</li>\n      <li className=\"income-item\">${amount}</li>\n      <button onClick={deleteHandler} className=\"trash-btn\">\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </div>\n  );\n};\n\nexport default IncomeEntry;\n","import React from \"react\";\n// Import Components\nimport IncomeEntry from \"./IncomeEntry\";\n\nconst IncomeList = ({\n  balance,\n  setBalance,\n  incomeBalance,\n  setIncomeBalance,\n  incomeEntries,\n  setIncomeEntries,\n}) => {\n  return (\n    <div className=\"income-container\">\n      <ul className=\"income-list\">\n        {incomeEntries.map((incomeEntry) => (\n          <IncomeEntry\n            balance={balance}\n            setBalance={setBalance}\n            incomeBalance={incomeBalance}\n            setIncomeBalance={setIncomeBalance}\n            incomeEntries={incomeEntries}\n            setIncomeEntries={setIncomeEntries}\n            incomeEntry={incomeEntry}\n            id={incomeEntry.id}\n            text={incomeEntry.text}\n            amount={incomeEntry.amount}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default IncomeList;\n","import React from \"react\";\n\nconst ExpenseForm = ({\n  balance,\n  setBalance,\n  expenseBalance,\n  setExpenseBalance,\n  inputExpenseText,\n  setInputExpenseText,\n  inputExpenseDollarText,\n  setExpenseDollarInputText,\n  expenseEntries,\n  setExpenseEntries,\n}) => {\n  const inputExpenseTextHandler = (e) => {\n    setInputExpenseText(e.target.value);\n  };\n  const inputExpenseDollarHandler = (e) => {\n    setExpenseDollarInputText(e.target.value);\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setExpenseEntries([\n      ...expenseEntries,\n      {\n        text: inputExpenseText,\n        amount: parseInt(inputExpenseDollarText),\n        id: Math.random() * 100,\n      },\n    ]);\n    // maybe I should do setBalance here instead of balanceHandler. button onclick calls submithandler\n    setBalance(balance - parseInt(inputExpenseDollarText));\n    setExpenseBalance(expenseBalance + parseInt(inputExpenseDollarText));\n    setInputExpenseText(\"\");\n    setExpenseDollarInputText(\"\");\n  };\n\n  return (\n    <form>\n      <input\n        value={inputExpenseText}\n        onChange={inputExpenseTextHandler}\n        type=\"text\"\n        className=\"expense-input\"\n        placeholder=\"Input an expense\"\n      ></input>\n      <input\n        value={inputExpenseDollarText}\n        onChange={inputExpenseDollarHandler}\n        type=\"number\"\n        className=\"expense-input-value\"\n        placeholder=\"$\"\n      ></input>\n      <button onClick={submitHandler} className=\"expense-button\" type=\"submit\">\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React from \"react\";\n\nconst ExpenseEntry = ({\n  balance,\n  setBalance,\n  expenseBalance,\n  setExpenseBalance,\n  expenseEntries,\n  setExpenseEntries,\n  expenseEntry,\n  text,\n  amount,\n}) => {\n  //Events\n  /**\n   * filer through each element id and if it matches the entry id then filter it\n   * out to get rid of it\n   */\n  const deleteHandler = () => {\n    setBalance(balance + amount);\n    setExpenseBalance(expenseBalance - amount);\n    setExpenseEntries(expenseEntries.filter((el) => el.id !== expenseEntry.id));\n  };\n  return (\n    <div className=\"expense\">\n      <li className=\"expense-item\">{text}</li>\n      <li className=\"expense-item\">${amount}</li>\n      <button onClick={deleteHandler} className=\"trash-btn\">\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </div>\n  );\n};\n\nexport default ExpenseEntry;\n","import React from \"react\";\n// Import Components\nimport ExpenseEntry from \"./ExpenseEntry\";\n\nconst ExpenseList = ({\n  balance,\n  setBalance,\n  expenseBalance,\n  setExpenseBalance,\n  expenseEntries,\n  setExpenseEntries,\n}) => {\n  return (\n    <div className=\"expense-container\">\n      <ul className=\"expense-list\">\n        {expenseEntries.map((expenseEntry) => (\n          <ExpenseEntry\n            balance={balance}\n            setBalance={setBalance}\n            expenseBalance={expenseBalance}\n            setExpenseBalance={setExpenseBalance}\n            expenseEntries={expenseEntries}\n            setExpenseEntries={setExpenseEntries}\n            expenseEntry={expenseEntry}\n            id={expenseEntry.id}\n            text={expenseEntry.text}\n            amount={expenseEntry.amount}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ExpenseList;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n//Import components\nimport IncomeForm from \"./components/IncomeForm\";\nimport IncomeList from \"./components/IncomeList\";\nimport ExpenseForm from \"./components/ExpenseForm\";\nimport ExpenseList from \"./components/ExpenseList\";\n\nfunction App() {\n  const [balance, setBalance] = useState(0);\n  const [incomeBalance, setIncomeBalance] = useState(0);\n  const [expenseBalance, setExpenseBalance] = useState(0);\n\n  const [inputIncomeText, setInputIncomeText] = useState(\"\");\n  const [inputDollarText, setDollarInputText] = useState(\"\");\n  const [incomeEntries, setIncomeEntries] = useState([]);\n\n  const [inputExpenseText, setInputExpenseText] = useState(\"\");\n  const [inputExpenseDollarText, setExpenseDollarInputText] = useState(\"\");\n  const [expenseEntries, setExpenseEntries] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Pocket Change</h1>\n      </header>\n      <div>\n        <h2 className=\"budget\">Leftover balance: ${balance}</h2>\n      </div>\n      <IncomeForm\n        balance={balance}\n        setBalance={setBalance}\n        incomeBalance={incomeBalance}\n        setIncomeBalance={setIncomeBalance}\n        inputIncomeText={inputIncomeText}\n        setInputIncomeText={setInputIncomeText}\n        inputDollarText={inputDollarText}\n        setDollarInputText={setDollarInputText}\n        incomeEntries={incomeEntries}\n        setIncomeEntries={setIncomeEntries}\n      />\n      <div>\n        <h3>Income: ${incomeBalance}</h3>\n      </div>\n      <IncomeList\n        balance={balance}\n        setBalance={setBalance}\n        incomeBalance={incomeBalance}\n        setIncomeBalance={setIncomeBalance}\n        incomeEntries={incomeEntries}\n        setIncomeEntries={setIncomeEntries}\n      />\n      <ExpenseForm\n        balance={balance}\n        setBalance={setBalance}\n        expenseBalance={expenseBalance}\n        setExpenseBalance={setExpenseBalance}\n        inputExpenseText={inputExpenseText}\n        setInputExpenseText={setInputExpenseText}\n        inputExpenseDollarText={inputExpenseDollarText}\n        setExpenseDollarInputText={setExpenseDollarInputText}\n        expenseEntries={expenseEntries}\n        setExpenseEntries={setExpenseEntries}\n      />\n      <div>\n        <h3>Expenses: ${expenseBalance}</h3>\n      </div>\n      <ExpenseList\n        balance={balance}\n        setBalance={setBalance}\n        expenseBalance={expenseBalance}\n        setExpenseBalance={setExpenseBalance}\n        expenseEntries={expenseEntries}\n        setExpenseEntries={setExpenseEntries}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}